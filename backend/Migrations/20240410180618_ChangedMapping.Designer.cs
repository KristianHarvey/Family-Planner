// <auto-generated />
using System;
using FamilyPlanner.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240410180618_ChangedMapping")]
    partial class ChangedMapping
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("FamilyPlanner.Models.ActivityModel.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DayKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlanId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserUid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("FamilyPlanner.Models.FamilyModel.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("FamilyPlanner.Models.MealModel.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlanId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecipeId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("RecipeId1");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("FamilyPlanner.Models.PlanModel.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DayKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserUid")
                        .HasColumnType("TEXT");

                    b.Property<int?>("WeeklyPlannerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserUid");

                    b.HasIndex("WeeklyPlannerId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("FamilyPlanner.Models.RecipeModel.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ingredients")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Steps")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ShoppingListModel.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlanId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserUid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("ShoppingList");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ShoppingListModel.ShoppingListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShoppingListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ShoppingListItem");
                });

            modelBuilder.Entity("FamilyPlanner.Models.TaskModel.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PlanId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedUserId");

                    b.HasIndex("PlanId");

                    b.ToTable("TaskItem");
                });

            modelBuilder.Entity("FamilyPlanner.Models.UserModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlanId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserUid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("PlanId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FamilyPlanner.Models.WeeklyPlannerModel.WeeklyPlanner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserUid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("UserUid");

                    b.ToTable("WeeklyPlanners");
                });

            modelBuilder.Entity("UserFamily", b =>
                {
                    b.Property<int>("FamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserUid")
                        .HasColumnType("INTEGER");

                    b.HasKey("FamilyId", "UserUid");

                    b.HasIndex("UserUid");

                    b.ToTable("UserFamily");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ActivityModel.Activity", b =>
                {
                    b.HasOne("FamilyPlanner.Models.PlanModel.Plan", null)
                        .WithMany("Activities")
                        .HasForeignKey("PlanId");
                });

            modelBuilder.Entity("FamilyPlanner.Models.MealModel.Meal", b =>
                {
                    b.HasOne("FamilyPlanner.Models.PlanModel.Plan", null)
                        .WithMany("Meals")
                        .HasForeignKey("PlanId");

                    b.HasOne("FamilyPlanner.Models.RecipeModel.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipeId");

                    b.HasOne("FamilyPlanner.Models.RecipeModel.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId1");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("FamilyPlanner.Models.PlanModel.Plan", b =>
                {
                    b.HasOne("FamilyPlanner.Models.UserModel.User", "User")
                        .WithMany()
                        .HasForeignKey("UserUid")
                        .HasPrincipalKey("Uid");

                    b.HasOne("FamilyPlanner.Models.WeeklyPlannerModel.WeeklyPlanner", null)
                        .WithMany("Plans")
                        .HasForeignKey("WeeklyPlannerId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FamilyPlanner.Models.RecipeModel.Recipe", b =>
                {
                    b.HasOne("FamilyPlanner.Models.UserModel.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ShoppingListModel.ShoppingList", b =>
                {
                    b.HasOne("FamilyPlanner.Models.PlanModel.Plan", null)
                        .WithMany("ShoppingLists")
                        .HasForeignKey("PlanId");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ShoppingListModel.ShoppingListItem", b =>
                {
                    b.HasOne("FamilyPlanner.Models.ShoppingListModel.ShoppingList", null)
                        .WithMany("Items")
                        .HasForeignKey("ShoppingListId");
                });

            modelBuilder.Entity("FamilyPlanner.Models.TaskModel.TaskItem", b =>
                {
                    b.HasOne("FamilyPlanner.Models.UserModel.User", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("AssignedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyPlanner.Models.PlanModel.Plan", "Plan")
                        .WithMany("Tasks")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("FamilyPlanner.Models.UserModel.User", b =>
                {
                    b.HasOne("FamilyPlanner.Models.ActivityModel.Activity", null)
                        .WithMany("Users")
                        .HasForeignKey("ActivityId");

                    b.HasOne("FamilyPlanner.Models.PlanModel.Plan", null)
                        .WithMany("ForUsers")
                        .HasForeignKey("PlanId");
                });

            modelBuilder.Entity("FamilyPlanner.Models.WeeklyPlannerModel.WeeklyPlanner", b =>
                {
                    b.HasOne("FamilyPlanner.Models.FamilyModel.Family", null)
                        .WithMany("WeeklyPlanners")
                        .HasForeignKey("FamilyId");

                    b.HasOne("FamilyPlanner.Models.UserModel.User", null)
                        .WithMany("WeeklyPlanners")
                        .HasForeignKey("UserUid")
                        .HasPrincipalKey("Uid");
                });

            modelBuilder.Entity("UserFamily", b =>
                {
                    b.HasOne("FamilyPlanner.Models.FamilyModel.Family", null)
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyPlanner.Models.UserModel.User", null)
                        .WithMany()
                        .HasForeignKey("UserUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FamilyPlanner.Models.ActivityModel.Activity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FamilyPlanner.Models.FamilyModel.Family", b =>
                {
                    b.Navigation("WeeklyPlanners");
                });

            modelBuilder.Entity("FamilyPlanner.Models.PlanModel.Plan", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("ForUsers");

                    b.Navigation("Meals");

                    b.Navigation("ShoppingLists");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ShoppingListModel.ShoppingList", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FamilyPlanner.Models.UserModel.User", b =>
                {
                    b.Navigation("WeeklyPlanners");
                });

            modelBuilder.Entity("FamilyPlanner.Models.WeeklyPlannerModel.WeeklyPlanner", b =>
                {
                    b.Navigation("Plans");
                });
#pragma warning restore 612, 618
        }
    }
}
