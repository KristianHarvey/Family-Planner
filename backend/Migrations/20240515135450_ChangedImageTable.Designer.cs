// <auto-generated />
using System;
using FamilyPlanner.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240515135450_ChangedImageTable")]
    partial class ChangedImageTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("FamilyPlanner.Models.ActivityModel.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlannedDayId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserUid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("PlannedDayId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("FamilyPlanner.Models.FamilyModel.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FamilyColor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserUid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("FamilyPlanner.Models.InviteModel.Invite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FromUserUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<int>("ToFamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ToUserUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FromUserUid");

                    b.HasIndex("ToFamilyId");

                    b.HasIndex("ToUserUid");

                    b.ToTable("Invites");
                });

            modelBuilder.Entity("FamilyPlanner.Models.KassalappModel.KassalappAllergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contains")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("KassalappModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShoppingListItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("KassalappModelId");

                    b.HasIndex("ShoppingListItemId");

                    b.ToTable("KassalappAllergen");
                });

            modelBuilder.Entity("FamilyPlanner.Models.KassalappModel.KassalappModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentUnitPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("EAN")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ingredients")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("StoreId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vendor")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("KassalappProducts");
                });

            modelBuilder.Entity("FamilyPlanner.Models.KassalappModel.KassalappNutrition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("KassalappModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShoppingListItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KassalappModelId");

                    b.HasIndex("ShoppingListItemId");

                    b.ToTable("KassalappNutrition");
                });

            modelBuilder.Entity("FamilyPlanner.Models.KassalappModel.KassalappPriceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("KassalappModelId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ShoppingListItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("KassalappModelId");

                    b.HasIndex("ShoppingListItemId");

                    b.ToTable("KassalappPriceHistory");
                });

            modelBuilder.Entity("FamilyPlanner.Models.KassalappModel.KassalappStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("LogoUri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("KassalappStore");
                });

            modelBuilder.Entity("FamilyPlanner.Models.MealModel.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlannedDayId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlannedDayId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("FamilyPlanner.Models.PlannedDayModel.PlannedDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DayKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserUid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("UserUid");

                    b.ToTable("PlannedDays");
                });

            modelBuilder.Entity("FamilyPlanner.Models.PlannedTaskModel.PlannedTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlannedDayId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserUid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("FamilyId");

                    b.HasIndex("PlannedDayId");

                    b.ToTable("PlannedTasks");
                });

            modelBuilder.Entity("FamilyPlanner.Models.RecipeModel.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ingredients")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Steps")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("FamilyPlanner.Models.RefreshTokenModel.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ShoppingListModel.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlannedDayId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserUid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("PlannedDayId");

                    b.ToTable("ShoppingLists");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ShoppingListModel.ShoppingListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CurrentPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CurrentUnitPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("EAN")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ingredients")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShoppingListId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ShoppingListItems");
                });

            modelBuilder.Entity("FamilyPlanner.Models.TaskModel.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignedUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedByUid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlannedTaskId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedUserId");

                    b.HasIndex("PlannedTaskId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("FamilyPlanner.Models.UserModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProfileImageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SelectedFamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserUid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ProfileImageId")
                        .IsUnique();

                    b.HasIndex("SelectedFamilyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FamilyPlanner.models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserUid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("UserFamily", b =>
                {
                    b.Property<int>("FamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserUid")
                        .HasColumnType("INTEGER");

                    b.HasKey("FamilyId", "UserUid");

                    b.HasIndex("UserUid");

                    b.ToTable("UserFamily");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ActivityModel.Activity", b =>
                {
                    b.HasOne("FamilyPlanner.Models.FamilyModel.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId");

                    b.HasOne("FamilyPlanner.Models.PlannedDayModel.PlannedDay", "PlannedDay")
                        .WithMany("Activities")
                        .HasForeignKey("PlannedDayId");

                    b.Navigation("Family");

                    b.Navigation("PlannedDay");
                });

            modelBuilder.Entity("FamilyPlanner.Models.InviteModel.Invite", b =>
                {
                    b.HasOne("FamilyPlanner.Models.UserModel.User", "FromUser")
                        .WithMany("SentInvites")
                        .HasForeignKey("FromUserUid")
                        .HasPrincipalKey("Uid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FamilyPlanner.Models.FamilyModel.Family", "Family")
                        .WithMany()
                        .HasForeignKey("ToFamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyPlanner.Models.UserModel.User", "ToUser")
                        .WithMany("ReceivedInvites")
                        .HasForeignKey("ToUserUid")
                        .HasPrincipalKey("Uid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Family");

                    b.Navigation("FromUser");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("FamilyPlanner.Models.KassalappModel.KassalappAllergen", b =>
                {
                    b.HasOne("FamilyPlanner.Models.KassalappModel.KassalappModel", null)
                        .WithMany("Allergens")
                        .HasForeignKey("KassalappModelId");

                    b.HasOne("FamilyPlanner.Models.ShoppingListModel.ShoppingListItem", null)
                        .WithMany("Allergens")
                        .HasForeignKey("ShoppingListItemId");
                });

            modelBuilder.Entity("FamilyPlanner.Models.KassalappModel.KassalappModel", b =>
                {
                    b.HasOne("FamilyPlanner.Models.KassalappModel.KassalappStore", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("FamilyPlanner.Models.KassalappModel.KassalappNutrition", b =>
                {
                    b.HasOne("FamilyPlanner.Models.KassalappModel.KassalappModel", null)
                        .WithMany("Nutritions")
                        .HasForeignKey("KassalappModelId");

                    b.HasOne("FamilyPlanner.Models.ShoppingListModel.ShoppingListItem", null)
                        .WithMany("Nutritions")
                        .HasForeignKey("ShoppingListItemId");
                });

            modelBuilder.Entity("FamilyPlanner.Models.KassalappModel.KassalappPriceHistory", b =>
                {
                    b.HasOne("FamilyPlanner.Models.KassalappModel.KassalappModel", null)
                        .WithMany("PriceHistory")
                        .HasForeignKey("KassalappModelId");

                    b.HasOne("FamilyPlanner.Models.ShoppingListModel.ShoppingListItem", null)
                        .WithMany("PriceHistory")
                        .HasForeignKey("ShoppingListItemId");
                });

            modelBuilder.Entity("FamilyPlanner.Models.MealModel.Meal", b =>
                {
                    b.HasOne("FamilyPlanner.Models.PlannedDayModel.PlannedDay", "PlannedDay")
                        .WithMany("Meals")
                        .HasForeignKey("PlannedDayId");

                    b.HasOne("FamilyPlanner.Models.RecipeModel.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId");

                    b.Navigation("PlannedDay");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("FamilyPlanner.Models.PlannedDayModel.PlannedDay", b =>
                {
                    b.HasOne("FamilyPlanner.Models.FamilyModel.Family", "Family")
                        .WithMany("PlannedDays")
                        .HasForeignKey("FamilyId");

                    b.HasOne("FamilyPlanner.Models.UserModel.User", "User")
                        .WithMany("PlannedDays")
                        .HasForeignKey("UserUid")
                        .HasPrincipalKey("Uid");

                    b.Navigation("Family");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FamilyPlanner.Models.PlannedTaskModel.PlannedTask", b =>
                {
                    b.HasOne("FamilyPlanner.Models.UserModel.User", "AssignedTo")
                        .WithMany("AssignedTasks")
                        .HasForeignKey("AssignedToId");

                    b.HasOne("FamilyPlanner.Models.FamilyModel.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId");

                    b.HasOne("FamilyPlanner.Models.PlannedDayModel.PlannedDay", "PlannedDay")
                        .WithMany("PlannedTasks")
                        .HasForeignKey("PlannedDayId");

                    b.Navigation("AssignedTo");

                    b.Navigation("Family");

                    b.Navigation("PlannedDay");
                });

            modelBuilder.Entity("FamilyPlanner.Models.RecipeModel.Recipe", b =>
                {
                    b.HasOne("FamilyPlanner.Models.UserModel.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ShoppingListModel.ShoppingList", b =>
                {
                    b.HasOne("FamilyPlanner.Models.FamilyModel.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId");

                    b.HasOne("FamilyPlanner.Models.PlannedDayModel.PlannedDay", "PlannedDay")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("PlannedDayId");

                    b.Navigation("Family");

                    b.Navigation("PlannedDay");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ShoppingListModel.ShoppingListItem", b =>
                {
                    b.HasOne("FamilyPlanner.Models.ShoppingListModel.ShoppingList", "ShoppingList")
                        .WithMany("Items")
                        .HasForeignKey("ShoppingListId");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("FamilyPlanner.Models.TaskModel.TaskItem", b =>
                {
                    b.HasOne("FamilyPlanner.Models.UserModel.User", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("AssignedUserId");

                    b.HasOne("FamilyPlanner.Models.PlannedTaskModel.PlannedTask", "PlannedTask")
                        .WithMany()
                        .HasForeignKey("PlannedTaskId");

                    b.Navigation("AssignedUser");

                    b.Navigation("PlannedTask");
                });

            modelBuilder.Entity("FamilyPlanner.Models.UserModel.User", b =>
                {
                    b.HasOne("FamilyPlanner.Models.ActivityModel.Activity", null)
                        .WithMany("Users")
                        .HasForeignKey("ActivityId");

                    b.HasOne("FamilyPlanner.models.Image", "ProfileImage")
                        .WithOne("User")
                        .HasForeignKey("FamilyPlanner.Models.UserModel.User", "ProfileImageId");

                    b.HasOne("FamilyPlanner.Models.FamilyModel.Family", "SelectedFamily")
                        .WithMany()
                        .HasForeignKey("SelectedFamilyId");

                    b.Navigation("ProfileImage");

                    b.Navigation("SelectedFamily");
                });

            modelBuilder.Entity("UserFamily", b =>
                {
                    b.HasOne("FamilyPlanner.Models.FamilyModel.Family", null)
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyPlanner.Models.UserModel.User", null)
                        .WithMany()
                        .HasForeignKey("UserUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FamilyPlanner.Models.ActivityModel.Activity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FamilyPlanner.Models.FamilyModel.Family", b =>
                {
                    b.Navigation("PlannedDays");
                });

            modelBuilder.Entity("FamilyPlanner.Models.KassalappModel.KassalappModel", b =>
                {
                    b.Navigation("Allergens");

                    b.Navigation("Nutritions");

                    b.Navigation("PriceHistory");
                });

            modelBuilder.Entity("FamilyPlanner.Models.PlannedDayModel.PlannedDay", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Meals");

                    b.Navigation("PlannedTasks");

                    b.Navigation("ShoppingLists");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ShoppingListModel.ShoppingList", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FamilyPlanner.Models.ShoppingListModel.ShoppingListItem", b =>
                {
                    b.Navigation("Allergens");

                    b.Navigation("Nutritions");

                    b.Navigation("PriceHistory");
                });

            modelBuilder.Entity("FamilyPlanner.Models.UserModel.User", b =>
                {
                    b.Navigation("AssignedTasks");

                    b.Navigation("PlannedDays");

                    b.Navigation("ReceivedInvites");

                    b.Navigation("SentInvites");
                });

            modelBuilder.Entity("FamilyPlanner.models.Image", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
